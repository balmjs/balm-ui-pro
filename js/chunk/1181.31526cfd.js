"use strict";(self.webpackChunkbalm_ui_pro=self.webpackChunkbalm_ui_pro||[]).push([[1181],{1181:function(t,e,o){o.r(e);e.default='<pre><code class="language-ts">type ProDialogHandler = (\n  actionConfig: ActionButton,\n  actionResult: object,\n  handleClose: Function\n) =&gt; void;\n\ninterface ProDialogOptions {\n  // Dialog\n  className?: string;\n  title?: string;\n  actionConfig?: ActionButton[];\n  maskClosable?: boolean;\n  // Custom component\n  components?: object;\n  component: string;\n  modelValueType?: string;\n  modelValueDefaults?: any;\n  modelValueKeys?: array;\n  attrOrProp?: object;\n  event?: string;\n  // Action handler\n  handler?: ProDialogHandler;\n  closeOnSave?: boolean;\n  refreshOnSave?: boolean;\n  refresh?: Function;\n}\n\ninterface VueInstance {\n  $dialog: ProDialogOptions;\n}\n</code></pre> <h3 id="options">Options</h3> <table> <thead> <tr> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code>className</code></td> <td>string</td> <td><code>&#39;&#39;</code></td> <td>The custom class name for the pro dialog.</td> </tr> <tr> <td><code>title</code></td> <td>string</td> <td><code>&#39;&#39;</code></td> <td>The title of the pro dialog.</td> </tr> <tr> <td><code>actionConfig</code></td> <td>ActionButton[]</td> <td><code>[]</code></td> <td>Action button config, see BalmUI <code>&lt;ui-button&gt;</code> props <a href="https://material.balmjs.com/general/button">docs</a></td> </tr> <tr> <td><code>maskClosable</code></td> <td>boolean</td> <td><code>false</code></td> <td>Closes the dialog, when the pro dialog scrim is clicked.</td> </tr> <tr> <td><code>components</code></td> <td>object</td> <td><code>{}</code></td> <td>A hash of components to be made available to the Vue instance.</td> </tr> <tr> <td><code>component</code></td> <td>string</td> <td>required</td> <td>The custom component for the pro dialog.</td> </tr> <tr> <td><code>modelValueType</code></td> <td>string</td> <td><code>&#39;object&#39;</code></td> <td>The model value type of the custom component.</td> </tr> <tr> <td><code>modelValueDefaults</code></td> <td>any</td> <td><code>{}</code></td> <td>The model value of the custom component.</td> </tr> <tr> <td><code>modelValueKeys</code></td> <td>array</td> <td><code>[]</code></td> <td>The model value filter.</td> </tr> <tr> <td><code>attrOrProp</code></td> <td>object</td> <td><code>{}</code></td> <td>The attrs or props of the custom component.</td> </tr> <tr> <td><code>event</code></td> <td>string</td> <td><code>&#39;action&#39;</code></td> <td>The event name of the custom component.</td> </tr> <tr> <td><code>handler</code></td> <td>ProDialogHandler</td> <td><code>() =&gt; {}</code></td> <td>The custom handler of the custom component or pro dialog.</td> </tr> <tr> <td><code>closeOnSave</code></td> <td>boolean</td> <td><code>true</code></td> <td>The pro dialog will auto close after saving model data</td> </tr> <tr> <td><code>refreshOnSave</code></td> <td>boolean</td> <td><code>false</code></td> <td>The page will auto refresh after saving model data</td> </tr> <tr> <td><code>refresh</code></td> <td>function</td> <td><code>location.reload</code></td> <td>Refreshing current page data</td> </tr> </tbody></table> <h3 id="use-dialog-without-vue-component">Use <code>$dialog</code> without <code>.vue</code> component</h3> <pre><code class="language-js">import { useDialog } from &#39;balm-ui-pro&#39;;\n// OR\n// import { useDialog } from &#39;balm-ui-pro/plugins/dialog&#39;;\n\nconst $dialog = useDialog();\n</code></pre> <h3 id="develop-custom-component-for-dialog">Develop custom component for <code>$dialog</code></h3> <h3 id="required-options">Required Options</h3> <ol> <li><code>component</code></li> <li><code>attrOrProp.actionConfig</code></li> </ol> <h3 id="required-events">Required Events</h3> <table> <thead> <tr> <th>Name</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody><tr> <td>customEventName</td> <td><code>function(actionConfig: ActionButton, data: ActionData)</code></td> <td>Emits when the custom component action is triggered.</td> </tr> </tbody></table> '}}]);