"use strict";(self.webpackChunkbalm_ui_pro=self.webpackChunkbalm_ui_pro||[]).push([[3972],{3972:function(n,t,o){o.r(t);t.default='<ul> <li><p><code>config/model.js</code></p> <pre><code class="language-js">export default {\n  methods: {\n    async getModelConfig(modelPath) {\n      let config = [];\n\n      try {\n        const module = await import(`@/views/${modelPath}`);\n        config = module.default;\n      } catch (err) {\n        console.warn(err.toString());\n      }\n\n      return config;\n    }\n    // ...\n  }\n};\n</code></pre> </li> <li><p><code>components/views/list-view.js</code></p> <pre><code class="language-js">import { useStore } from &#39;balm-ui&#39;;\n\nexport async function getModelConfigFn({ modelPath }) {\n  const store = useStore();\n\n  return await store.getModelConfig(modelPath);\n}\n\nexport async function getModelListDataFn({ model, searchForm, listData }) {\n  const store = useStore();\n\n  const { data } = searchForm;\n  const { page } = listData;\n  const params = Object.assign({}, data, {\n    page\n  });\n\n  return await store.getModelList(model, params);\n}\n\nexport async function handleRowAction(action, data, refresh) {\n  console.log(&#39;handleRowAction&#39;, action, data);\n}\n\nexport async function handleTopAction(action, data, refresh) {\n  console.log(&#39;handleTopAction&#39;, action, data);\n}\n</code></pre> </li> </ul> <pre><code class="language-js">import {\n  getModelConfigFn,\n  getModelListDataFn,\n  handleRowAction,\n  handleTopAction\n} from &#39;@/components/views/list-view&#39;;\n\napp.use(BalmUIPro, {\n  UiListView: {\n    getModelConfigFn,\n    getModelDataFn: getModelListDataFn,\n    tableDataFormat: {\n      data: &#39;data&#39;,\n      total: &#39;total&#39;\n      // page: &#39;page&#39;\n    },\n    rowActionHandler: handleRowAction,\n    topActionHandler: handleTopAction\n  }\n});\n</code></pre> <hr> <pre><code class="language-html">&lt;ui-list-view\n  title=&quot;List View&quot;\n  model=&quot;user&quot;\n  model-path=&quot;model-config/demo.json&quot;\n  :thead=&quot;thead&quot;\n  :tbody=&quot;tbody&quot;\n  :row-action-config=&quot;rowActionConfig&quot;\n  :top-action-config=&quot;topActionConfig&quot;\n&gt;&lt;/ui-list-view&gt;\n</code></pre> <pre><code class="language-js">const thead = [\n  {\n    value: &#39;ID&#39;,\n    required: true\n  },\n  ,\n  &#39;Dessert&#39;,\n  &#39;Calories&#39;,\n  &#39;Fat&#39;,\n  &#39;Actions&#39;\n];\nconst tbody = [\n  &#39;id&#39;,\n  &#39;dessert&#39;,\n  &#39;calories&#39;,\n  &#39;fat&#39;,\n  {\n    slot: &#39;actions&#39;\n  }\n];\n\nconst rowActionConfig = [\n  {\n    component: &#39;ui-icon&#39;,\n    text: &#39;add&#39;\n  },\n  {\n    type: &#39;no-slot&#39;,\n    component: &#39;ui-icon-button&#39;,\n    attrOrProp: {\n      icon: &#39;favorite&#39;\n    }\n  },\n  {\n    component: &#39;ui-button&#39;,\n    text: &#39;Add&#39;,\n    attrOrProp: {\n      icon: &#39;add&#39;\n    }\n  },\n  {\n    text: &#39;BalmUI&#39;,\n    href: &#39;https://material.balmjs.com/&#39;\n  },\n  {\n    type: &#39;router-link&#39;,\n    text: &#39;RouterLink&#39;\n  },\n  {\n    text: &#39;Link&#39;,\n    onClick: () =&gt; {\n      console.log(&#39;link button&#39;);\n    }\n  }\n];\n\nconst topActionConfig = [\n  {\n    type: &#39;column-selection&#39;,\n    icon: &#39;view_column&#39;,\n    text: &#39;Column&#39;,\n    allSelectedLabel: &#39;All&#39;\n  },\n  {\n    type: &#39;router-link&#39;,\n    icon: &#39;add&#39;,\n    text: &#39;Create&#39;\n  },\n  {\n    type: &#39;multi-update&#39;,\n    text: &#39;Update&#39;\n  },\n  {\n    type: &#39;multi-delete&#39;,\n    text: &#39;Delete&#39;\n  }\n];\n\nexport default {\n  data() {\n    return {\n      thead,\n      tbody,\n      rowActionConfig,\n      topActionConfig\n    };\n  }\n};\n</code></pre> '}}]);